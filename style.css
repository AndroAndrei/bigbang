/*
Theme Name: bigbang
Theme URI: https://github.com/alexgordon25/bigbang
Author: Daniel Gordon
Author URI: http://gordonwebstudio.com
Description: A wordpress starter theme for developers.
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: bigbang
*/
/**************************************************************************************************
 *
 *  @Section: Reset Default Browser Styles
 *
***************************************************************************************************/
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
@import url(https://fonts.googleapis.com/css?family=Oswald:400,700);
@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,700);
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*:focus {
  outline: none !important; }

/**************************************************************************************************
 *
 *  @Section: Normalize
 *
***************************************************************************************************/
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/**************************************************************************************************
 *
 *  @Section: Global
 *
***************************************************************************************************/
html {
  font-size: 62.5%; }

body {
  font-family: "Open Sans", sans-serif;
  color: #555555;
  font-size: 15px;
  line-height: 19.5px;
  font-size: 1.5rem;
  line-height: 1.95rem; }

.desktop {
  display: none; }

.mobile {
  display: block; }

a {
  text-decoration: none;
  display: inline-block;
  color: #3366ff;
  transition: all 0.2s ease-in-out; }
  a:hover, a:focus, a:active {
    text-decoration: none;
    color: #0033cc; }
    a:hover .thumb, a:hover .thumb-container, a:focus .thumb, a:focus .thumb-container, a:active .thumb, a:active .thumb-container {
      outline: 1px solid #0033cc; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Oswald", sans-serif;
  font-weight: 400; }

h1 {
  font-size: 24px;
  line-height: 31.2px;
  font-size: 2.4rem;
  line-height: 3.12rem; }

h2 {
  font-size: 20px;
  line-height: 26px;
  font-size: 2rem;
  line-height: 2.6rem; }

h3 {
  font-size: 18px;
  line-height: 23.4px;
  font-size: 1.8rem;
  line-height: 2.34rem; }

h4 {
  font-size: 16px;
  line-height: 20.8px;
  font-size: 1.6rem;
  line-height: 2.08rem; }

h5 {
  font-size: 14px;
  line-height: 18.2px;
  font-size: 1.4rem;
  line-height: 1.82rem; }

p {
  margin: 0 0 10px; }

img {
  display: block;
  width: 100%;
  height: auto; }
  img.alignleft, img.alignright, img.aligncenter {
    width: auto;
    display: inline-block; }
  img.alignleft {
    float: left;
    margin-right: 20px; }
  img.alignright {
    float: right;
    margin-left: 20px; }
  img.aligncenter {
    display: block;
    margin: 10px auto; }

hr {
  border-top: 1px solid rgba(216, 216, 216, 0.25); }

.content-area {
  margin-top: 60px;
  min-height: 500px; }
  .content-area h1,
  .content-area h2,
  .content-area h3,
  .content-area h4,
  .content-area h5,
  .content-area h6 {
    margin: 20px 0 10px; }

.btn {
  margin-bottom: 10px;
  padding: 0px 15px 0px 15px;
  color: #FFFFFF;
  background-color: #494748;
  box-shadow: 0 0.25em 0 0 #262325;
  font-family: "Oswald", sans-serif;
  transition: all 0.2s ease-in-out;
  font-size: 18px;
  line-height: 23.4px;
  font-size: 1.8rem;
  line-height: 2.34rem; }
  .btn:after {
    content: '\f105';
    font-family: 'FontAwesome';
    margin-left: 10px;
    font-size: 25px;
    line-height: 32.5px;
    font-size: 2.5rem;
    line-height: 3.25rem; }
  .btn:hover, .btn:focus, .btn:active {
    color: #FFFFFF;
    background-color: #262325; }
  .btn.gray {
    color: #FFFFFF;
    background-color: #494748;
    box-shadow: 0 0.25em 0 0 #262325; }
    .btn.gray:hover, .btn.gray:focus, .btn.gray:active {
      background-color: #ececec;
      box-shadow: 0 0.25em 0 0 #494748; }

.module {
  position: relative;
  display: block;
  padding: 50px 0;
  margin: 0; }
  .module h2 {
    margin-bottom: 20px; }
  .module .description.centered {
    padding-top: 150px;
    text-align: center; }
  .module.gray {
    background-color: #ececec; }

.module-default h2,
.module-default h3,
.module-single h2,
.module-single h3 {
  color: #555555; }

.module-default h2,
.module-single h2 {
  text-transform: uppercase; }

.module-default h3,
.module-single h3 {
  text-transform: uppercase; }

.module-default ul,
.module-single ul {
  margin-bottom: 20px;
  padding-left: 20px;
  list-style: disc; }

.thumb, .thumb-container {
  outline: 1px solid #d8d8d8;
  border: 2px solid #FFFFFF;
  margin: 5px 0;
  width: 100%;
  height: auto; }

.thumb-container {
  position: relative;
  overflow: hidden; }
  .thumb-container:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: 75%; }
  .thumb-container > .inner-content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0; }
    .thumb-container > .inner-content img {
      position: absolute;
      top: 50%;
      left: 50%;
      -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
      width: auto;
      height: 100%; }

#wpadminbar {
  top: auto;
  bottom: 0; }

.error-404 {
  margin-top: 200px;
  text-align: center; }

.acf-map {
  width: 100%;
  height: 35vw;
  min-height: 400px; }

/* fixes potential theme css conflict */
.acf-map img {
  max-width: inherit !important; }

/* Google map transparent overlay link */
.map-overlay {
  position: absolute;
  display: block;
  width: 100%;
  height: 100%;
  background-color: transparent;
  z-index: 10; }

@media only screen and (max-width: 992px) {
  .container {
    width: 100%; } }

@media only screen and (min-width: 992px) {
  body {
    font-size: 16px;
    line-height: 20.8px;
    font-size: 1.6rem;
    line-height: 2.08rem; }
  h1 {
    font-size: 28px;
    line-height: 36.4px;
    font-size: 2.8rem;
    line-height: 3.64rem; }
  h2 {
    font-size: 24px;
    line-height: 31.2px;
    font-size: 2.4rem;
    line-height: 3.12rem; }
  h3 {
    font-size: 22px;
    line-height: 28.6px;
    font-size: 2.2rem;
    line-height: 2.86rem; }
  h4 {
    font-size: 20px;
    line-height: 26px;
    font-size: 2rem;
    line-height: 2.6rem; }
  h5 {
    font-size: 18px;
    line-height: 23.4px;
    font-size: 1.8rem;
    line-height: 2.34rem; }
  .desktop {
    display: block; }
  .mobile {
    display: none; } }

@media only screen and (min-width: 1200px) {
  body {
    font-size: 18px;
    line-height: 23.4px;
    font-size: 1.8rem;
    line-height: 2.34rem; }
  h1 {
    font-size: 38px;
    line-height: 49.4px;
    font-size: 3.8rem;
    line-height: 4.94rem; }
  h2 {
    font-size: 30px;
    line-height: 39px;
    font-size: 3rem;
    line-height: 3.9rem; }
  h3 {
    font-size: 28px;
    line-height: 36.4px;
    font-size: 2.8rem;
    line-height: 3.64rem; }
  h4 {
    font-size: 22px;
    line-height: 28.6px;
    font-size: 2.2rem;
    line-height: 2.86rem; }
  h5 {
    font-size: 20px;
    line-height: 26px;
    font-size: 2rem;
    line-height: 2.6rem; } }

/**************************************************************************************************
 *
 *  @Section: Header
 *
***************************************************************************************************/
/**************************************************************************************************
 *
 *  @Section: Footer
 *
***************************************************************************************************/
footer {
  padding-top: 20px;
  min-height: 60px;
  color: #FFFFFF;
  background-color: #262325; }
  footer #scroll-top {
    position: relative;
    margin-top: -10px;
    float: right;
    color: #FFFFFF;
    font-size: 25px;
    line-height: 32.5px;
    font-size: 2.5rem;
    line-height: 3.25rem; }
    footer #scroll-top:hover, footer #scroll-top:focus, footer #scroll-top:active {
      -moz-opacity: 0.5;
      -khtml-opacity: 0.5;
      -webkit-opacity: 0.5;
      opacity: 0.5;
      filter: "alpha(opacity=$opperc)"; }

/**************************************************************************************************
 *
 *  @Section: Forms
 *
***************************************************************************************************/

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
